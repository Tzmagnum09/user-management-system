{% extends 'base.html.twig' %}

{% block title %}{{ 'Edit Email Template'|trans }} - {{ parent() }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/email-templates.css') }}">
{% endblock %}

{% block body %}
<div class="row">
    <div class="col-md-12 mb-4">
        <a href="{{ path('admin_email_templates') }}" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> {{ 'Back to email templates'|trans }}
        </a>
    </div>

    <div class="col-md-12">
        <div class="card">
            <div class="card-header bg-gradient-primary text-white">
                <h4>{{ 'Modifier le modèle d\'email'|trans }}</h4>
            </div>
            <div class="card-body">
                {{ form_start(form) }}
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">{{ 'Code du modèle'|trans }}</label>
                        <div class="form-control-plaintext">
                            {{ form_widget(form.code, {'attr': {'class': 'form-select'}}) }}
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">{{ 'Langue'|trans }}</label>
                        <div class="form-control-plaintext">
                            {{ form_widget(form.locale, {'attr': {'class': 'form-select'}}) }}
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label">{{ 'Sujet de l\'email'|trans }}</label>
                    {{ form_widget(form.subject, {'attr': {'class': 'form-control'}}) }}
                </div>

                <!-- Champ caché pour stocker l'ID du template -->
                <input type="hidden" name="templateId" value="{{ form.vars.data.id|default('') }}">

                <!-- Éditeur HTML sans onglets -->
                <div class="email-editor-container">
                    {{ form_widget(form.htmlContent, { 'attr': {'class': 'tinymce-editor'} }) }}
                </div>

                <!-- Variables disponibles - Déplacé en dessous de l'éditeur -->
                <div class="variables-container">
                    <p>Vous pouvez utiliser les variables ci-dessous dans votre modèle. Elles seront remplacées par les valeurs réelles lors de l'envoi.</p>
                    
                    <div class="variables-header">
                        Variables disponibles
                    </div>
                    <div class="variables-content">
                        <!-- Informations personnelles -->
                        <div class="variables-group">
                            <div class="variables-group-title">Informations personnelles</div>
                            <div class="row">
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Prénom de l'utilisateur" data-var="firstName">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Nom de l'utilisateur" data-var="lastName">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Nom complet de l'utilisateur" data-var="fullName">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Adresse email de l'utilisateur" data-var="email">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Nom d'utilisateur" data-var="username">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Numéro de téléphone" data-var="phoneNumber">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Date de naissance" data-var="birthDate">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Âge de l'utilisateur" data-var="age">
                                </div>
                            </div>
                        </div>
                        
                        <!-- Adresse -->
                        <div class="variables-group">
                            <div class="variables-group-title">Adresse</div>
                            <div class="row">
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Rue" data-var="street">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Numéro de maison" data-var="houseNumber">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Numéro de boîte" data-var="boxNumber">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Code postal" data-var="postalCode">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Ville" data-var="city">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Pays" data-var="country">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Adresse complète" data-var="fullAddress">
                                </div>
                            </div>
                        </div>
                        
                        <!-- Système et dates -->
                        <div class="variables-group">
                            <div class="variables-group-title">Système et dates</div>
                            <div class="row">
                                <div class="col-md-4">
                                    <input type="text" readonly class="variable-input" value="Langue préférée de l'utilisateur" data-var="locale">
                                </div>
                                <div class="col-md-4">
                                    <input type="text" readonly class="variable-input" value="Nom de domaine du site" data-var="domain">
                                </div>
                                <div class="col-md-4">
                                    <input type="text" readonly class="variable-input" value="Date d'inscription" data-var="createdAt">
                                </div>
                            </div>
                        </div>
                        
                        <!-- Variables spécifiques -->
                        <div class="variables-group">
                            <div class="variables-group-title">Variables spécifiques</div>
                            <div class="row">
                                {% if form.vars.data.code == 'registration_confirmation' %}
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="URL de vérification d'email" data-var="signedUrl">
                                </div>
                                {% endif %}
                                
                                {% if form.vars.data.code == 'reset_password' %}
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Token de réinitialisation de mot de passe" data-var="resetToken">
                                </div>
                                {% endif %}
                                
                                {% if form.vars.data.code == 'role_change' %}
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Rôle précédent" data-var="previousRole">
                                </div>
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Nouveau rôle" data-var="newRole">
                                </div>
                                {% endif %}
                                
                                {% if form.vars.data.code == 'permission_update' %}
                                <div class="col-md-6">
                                    <input type="text" readonly class="variable-input" value="Détails des modifications de permissions" data-var="permissionChanges">
                                </div>
                                {% endif %}
                                
                                <div class="col-md-3">
                                    <input type="text" readonly class="variable-input" value="Durée de validité du lien" data-var="tokenLifetime">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="action-buttons">
                    <div>
                        <a href="{{ path('admin_email_templates') }}" class="btn btn-secondary">
                            {{ 'Annuler'|trans }}
                        </a>
                    </div>
                    <div>
                        <button type="button" id="previewButton" class="btn btn-preview" {% if is_new|default(false) %}style="display: none;"{% endif %}>
                            <i class="fas fa-eye"></i> {{ 'Aperçu'|trans }}
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> {{ 'Enregistrer'|trans }}
                        </button>
                    </div>
                </div>
                
                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>

<!-- Modal d'aperçu -->
<div id="previewModal" class="preview-modal">
    <div class="preview-modal-content">
        <div class="preview-modal-header">
            <h5 class="preview-modal-title">{{ 'Aperçu du modèle'|trans }}</h5>
            <button type="button" class="preview-modal-close">&times;</button>
        </div>
        <div class="preview-modal-body">
            <div id="previewLoading" class="preview-loading">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Chargement...</span>
                </div>
                <p class="mt-2">Chargement de l'aperçu...</p>
            </div>
            <iframe id="previewFrame" class="preview-iframe" style="display: none;"></iframe>
        </div>
        <div class="preview-modal-footer">
            <button type="button" class="btn btn-secondary" id="previewCloseButton">{{ 'Fermer'|trans }}</button>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- TinyMCE avec API key -->
    <script src="https://cdn.tiny.cloud/1/mdyxgt84w9fonoc3bvhrh3kfezt64bf9ah4fc8zitm8w1gjb/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Obtenir la langue de l'utilisateur depuis la locale de l'application
            const userLocale = '{{ app.request.locale }}';
            
            // Conversion de la locale vers le format TinyMCE
            let tinyMceLanguage = 'fr_FR'; // Par défaut le français
            
            // Correspondance des locales
            const localeMapping = {
                'fr': 'fr_FR',
                'en': 'en_US',
                'de': 'de',
                'nl': 'nl'
            };
            
            // Si la locale est supportée, utilisez-la
            if (localeMapping[userLocale]) {
                tinyMceLanguage = localeMapping[userLocale];
            }
            
            // Initialisation de TinyMCE avec la langue adaptée
            tinymce.init({
                selector: '.tinymce-editor',
                height: 500,
                menubar: true,
                plugins: [
                    'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',
                    'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',
                    'insertdatetime', 'media', 'table', 'help', 'wordcount'
                ],
                toolbar: 'undo redo | blocks | ' +
                    'bold italic forecolor backcolor | ' +
                    'alignleft aligncenter alignright alignjustify | ' +
                    'bullist numlist outdent indent | removeformat | ' +
                    'link image media table | code | help',
                // Activation des styles en ligne
                inline_styles: true,
                // Configuration des styles de contenu
                content_style: `
                    body {
                        font-family: Arial, sans-serif;
                        line-height: 1.6;
                        color: #333;
                        margin: 0;
                        padding: 20px;
                    }
                    .header {
                        background: linear-gradient(135deg, #8e44ad, #3498db);
                        color: white;
                        padding: 20px;
                        text-align: center;
                    }
                    .content {
                        padding: 20px;
                        background-color: #f9f9f9;
                    }
                    .button {
                        display: inline-block;
                        background: linear-gradient(135deg, #8e44ad, #3498db);
                        color: white;
                        text-decoration: none;
                        padding: 10px 20px;
                        border-radius: 5px;
                        margin-top: 20px;
                    }
                    .footer {
                        text-align: center;
                        font-size: 12px;
                        color: #777;
                        margin-top: 20px;
                    }
                `,
                language: tinyMceLanguage, // Utiliser la langue détectée
                branding: false, // Supprimer la marque TinyMCE
                promotion: false, // Supprimer la promotion
                setup: function(editor) {
                    // Ajout d'un événement pour notifier quand l'éditeur est prêt
                    editor.on('init', function() {
                        window.tinyMCEInitialized = true;
                    });
                }
            });
            
            // Variables cliquables avec format %variableName%
            const variables = document.querySelectorAll('.variable-input');
            variables.forEach(function(variable) {
                variable.addEventListener('click', function() {
                    const variableName = this.getAttribute('data-var');
                    const activeEditor = tinymce.activeEditor;
                    
                    if (activeEditor) {
                        // Insertion au format %variableName%
                        activeEditor.execCommand('mceInsertContent', false, '%' + variableName + '%');
                        activeEditor.focus();
                    }
                });
            });

            // Écouteur d'événement pour le changement de langue
            const localeSelect = document.querySelector('#email_template_locale');
            const codeSelect = document.querySelector('#email_template_code');
            const subjectField = document.querySelector('#email_template_subject');
            
            if (localeSelect && codeSelect) {
                localeSelect.addEventListener('change', function() {
                    loadTemplateForCodeAndLocale();
                });
                
                // Également changer quand le code du template change
                codeSelect.addEventListener('change', function() {
                    loadTemplateForCodeAndLocale();
                });
            }
            
            // Fonction pour charger le template correspondant au code et à la locale
            function loadTemplateForCodeAndLocale() {
                const code = codeSelect.value;
                const locale = localeSelect.value;
                
                if (!code || !locale) return;
                
                // Afficher un indicateur de chargement
                const loadingIndicator = document.createElement('div');
                loadingIndicator.id = 'template-loading-indicator';
                loadingIndicator.innerHTML = '<div class="spinner-border text-primary" role="status"><span class="visually-hidden">Chargement...</span></div><p class="mt-2">Chargement du template...</p>';
                loadingIndicator.style.position = 'fixed';
                loadingIndicator.style.top = '50%';
                loadingIndicator.style.left = '50%';
                loadingIndicator.style.transform = 'translate(-50%, -50%)';
                loadingIndicator.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';
                loadingIndicator.style.padding = '20px';
                loadingIndicator.style.borderRadius = '5px';
                loadingIndicator.style.zIndex = '9999';
                loadingIndicator.style.textAlign = 'center';
                document.body.appendChild(loadingIndicator);
                
                // Créer et envoyer la requête AJAX
                const formData = new FormData();
                formData.append('code', code);
                formData.append('locale', locale);
                
                fetch('{{ path("admin_email_template_by_code_locale") }}', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    // Supprimer l'indicateur de chargement
                    document.body.removeChild(loadingIndicator);
                    
                    if (data.success && data.template) {
                        // Mettre à jour le sujet
                        if (subjectField) {
                            subjectField.value = data.template.subject;
                        }
                        
                        // Mettre à jour le contenu de l'éditeur TinyMCE
                        const waitForTinyMCE = setInterval(function() {
                            if (window.tinyMCEInitialized && tinymce.activeEditor) {
                                clearInterval(waitForTinyMCE);
                                tinymce.activeEditor.setContent(data.template.htmlContent);
                            }
                        }, 100);
                        
                        // Optionnel: mettre à jour l'ID si vous avez un champ caché pour l'ID
                        const idField = document.querySelector('input[name="templateId"]');
                        if (idField) {
                            idField.value = data.template.id;
                        }
                    } else {
                        // Afficher un message d'erreur
                        const errorMessage = data.message || 'Erreur lors du chargement du template';
                        alert(errorMessage);
                        
                        // Optionnel: Réinitialiser les champs
                        if (subjectField) {
                            subjectField.value = '';
                        }
                        
                        if (tinymce.activeEditor) {
                            tinymce.activeEditor.setContent('');
                        }
                    }
                })
                .catch(error => {
                    // Supprimer l'indicateur de chargement
                    document.body.removeChild(loadingIndicator);
                    console.error('Erreur:', error);
                    alert('Une erreur est survenue lors du chargement du template');
                });
            }

            // Gestion de la modal d'aperçu
            const modal = document.getElementById('previewModal');
            const modalClose = document.querySelector('.preview-modal-close');
            const closeButton = document.getElementById('previewCloseButton');
            const previewButton = document.getElementById('previewButton');
            const previewFrame = document.getElementById('previewFrame');
            const previewLoading = document.getElementById('previewLoading');
            
            // Fonction pour ouvrir la modal
            function openModal() {
                modal.style.display = 'block';
                document.body.style.overflow = 'hidden'; // Empêcher le défilement en arrière-plan

                // Récupérer le contenu actuel de l'éditeur TinyMCE
                const templateId = '{{ email_template.id }}';
                const previewUrl = '{{ path("admin_email_template_preview", {"id": "TEMPLATE_ID"}) }}'.replace('TEMPLATE_ID', templateId);
                
                // Afficher le chargement et masquer l'iframe
                previewLoading.style.display = 'block';
                previewFrame.style.display = 'none';
                
                // Charger l'aperçu dans l'iframe
                previewFrame.onload = function() {
                    // Masquer le chargement et afficher l'iframe une fois chargé
                    previewLoading.style.display = 'none';
                    previewFrame.style.display = 'block';
                };
                
                previewFrame.src = previewUrl;
            }
            
            // Fonction pour fermer la modal
            function closeModal() {
                modal.style.display = 'none';
                document.body.style.overflow = ''; // Restaurer le défilement
                // Réinitialiser l'iframe
                previewFrame.src = 'about:blank';
            }
            
            // Écouteurs d'événements pour le bouton d'aperçu
            if (previewButton) {
                previewButton.addEventListener('click', openModal);
            }
            
            // Écouteurs d'événements pour fermer la modal
            if (modalClose) {
                modalClose.addEventListener('click', closeModal);
            }
            if (closeButton) {
                closeButton.addEventListener('click', closeModal);
            }
            
            // Fermer la modal si on clique en dehors
            window.addEventListener('click', function(event) {
                if (modal && event.target == modal) {
                    closeModal();
                }
            });
            
            // Fermer la modal avec la touche Echap
            document.addEventListener('keydown', function(event) {
                if (modal && event.key === 'Escape' && modal.style.display === 'block') {
                    closeModal();
                }
            });
        });
    </script>
{% endblock %}